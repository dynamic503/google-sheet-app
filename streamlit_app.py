import streamlit as st
import hashlib
import re
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import os
import json

# --- K·∫øt n·ªëi Google Sheets ---
def connect_to_gsheets():
    scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
    creds_json = os.getenv("GOOGLE_CREDENTIALS_JSON")
    sheet_id = os.getenv("SHEET_ID")
    
    if not creds_json or not sheet_id:
        st.error("B·∫°n ch∆∞a c·∫•u h√¨nh bi·∫øn m√¥i tr∆∞·ªùng GOOGLE_CREDENTIALS_JSON ho·∫∑c SHEET_ID")
        st.stop()
    
    creds_dict = json.loads(creds_json)
    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
    client = gspread.authorize(creds)
    sh = client.open_by_key(sheet_id)
    return sh

# --- Ki·ªÉm tra xem chu·ªói ƒë√£ m√£ h√≥a SHA256 ch∆∞a ---
def is_hashed(pw):
    return pw is not None and len(pw) == 64 and re.fullmatch(r'[0-9a-f]+', pw)

# --- H√†m m√£ h√≥a m·∫≠t kh·∫©u ---
def hash_password(password):
    if password is None:
        password = ''
    return hashlib.sha256(password.encode()).hexdigest()

# --- L·∫•y danh s√°ch ng∆∞·ªùi d√πng t·ª´ sheet "User" v√† t·ª± ƒë·ªông hash n·∫øu ch∆∞a ---
def get_users(sh):
    worksheet = sh.worksheet("User")
    data = worksheet.get_all_records()
    updated = False

    for idx, user in enumerate(data):
        pw = user.get('Password')
        if not pw:
            continue  # B·ªè qua n·∫øu √¥ Password tr·ªëng

        if not is_hashed(pw):
            hashed = hash_password(pw)
            worksheet.update_cell(idx + 2, 2, hashed)  # d√≤ng idx+2, c·ªôt 2 (Password)
            user['Password'] = hashed
            updated = True

    if updated:
        st.success("ƒê√£ t·ª± ƒë·ªông m√£ h√≥a m·∫≠t kh·∫©u ch∆∞a hash.")
    
    return data

# --- X√°c th·ª±c ng∆∞·ªùi d√πng ---
def check_login(sh, username, password):
    users = get_users(sh)
    hashed_input = hash_password(password)
    for user in users:
        if user['Username'] == username and user['Password'] == hashed_input:
            return user['Role']
    return None

# --- ƒê·ªïi m·∫≠t kh·∫©u ---
def change_password(sh, username, old_pw, new_pw):
    worksheet = sh.worksheet("User")
    data = worksheet.get_all_records()

    hashed_old = hash_password(old_pw)
    hashed_new = hash_password(new_pw)

    for idx, user in enumerate(data):
        if user['Username'] == username and user['Password'] == hashed_old:
            worksheet.update_cell(idx + 2, 2, hashed_new)
            return True
    return False

# --- Giao di·ªán ch√≠nh ---
def main():
    st.title("·ª®ng d·ª•ng qu·∫£n l√Ω - ƒêƒÉng nh·∫≠p")

    if 'login' not in st.session_state:
        st.session_state.login = False
    if 'username' not in st.session_state:
        st.session_state.username = ''
    if 'role' not in st.session_state:
        st.session_state.role = ''

    if not st.session_state.login:
        username = st.text_input("T√™n ƒëƒÉng nh·∫≠p")
        password = st.text_input("M·∫≠t kh·∫©u", type="password")

        if st.button("ƒêƒÉng nh·∫≠p"):
            try:
                sh = connect_to_gsheets()
            except Exception as e:
                st.error(f"L·ªói khi k·∫øt n·ªëi Google Sheets: {e}")
                return

            role = check_login(sh, username, password)
            if role:
                st.session_state.login = True
                st.session_state.username = username
                st.session_state.role = role
                st.success(f"ƒêƒÉng nh·∫≠p th√†nh c√¥ng v·ªõi quy·ªÅn: {role}")
                st.experimental_rerun()
            else:
                st.error("Sai t√™n ƒëƒÉng nh·∫≠p ho·∫∑c m·∫≠t kh·∫©u.")
    else:
        st.write(f"üëã Xin ch√†o **{st.session_state.username}**! B·∫°n c√≥ quy·ªÅn: **{st.session_state.role}**")
        if st.button("ƒêƒÉng xu·∫•t"):
            st.session_state.login = False
            st.session_state.username = ''
            st.session_state.role = ''
            st.experimental_rerun()

        st.subheader("üîí ƒê·ªïi m·∫≠t kh·∫©u")
        old_pw = st.text_input("M·∫≠t kh·∫©u c≈©", type="password")
        new_pw = st.text_input("M·∫≠t kh·∫©u m·ªõi", type="password")
        new_pw2 = st.text_input("Nh·∫≠p l·∫°i m·∫≠t kh·∫©u m·ªõi", type="password")

        if st.button("C·∫≠p nh·∫≠t m·∫≠t kh·∫©u"):
            if not old_pw or not new_pw or not new_pw2:
                st.error("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng.")
            elif new_pw != new_pw2:
                st.error("M·∫≠t kh·∫©u m·ªõi kh√¥ng kh·ªõp.")
            else:
                try:
                    sh = connect_to_gsheets()
                except Exception as e:
                    st.error(f"L·ªói k·∫øt n·ªëi Google Sheets: {e}")
                    return

                if change_password(sh, st.session_state.username, old_pw, new_pw):
                    st.success("üéâ ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng! Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.")
                    st.session_state.login = False
                    st.session_state.username = ''
                    st.session_state.role = ''
                    st.experimental_rerun()
                else:
                    st.error("M·∫≠t kh·∫©u c≈© kh√¥ng ch√≠nh x√°c.")

if __name__ == "__main__":
    main()
